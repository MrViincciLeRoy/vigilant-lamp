# .github/workflows/main.yml
name: Generate Horror Series and Send to Telegram

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Run weekly on Sunday at midnight UTC
  workflow_dispatch:

concurrency:
  group: horror-series
  cancel-in-progress: true

jobs:
  generate-and-send:
    runs-on: ubuntu-latest
    timeout-minutes: 55

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # <<< NEW: Cache for pip dependencies >>>
      # This step caches the downloaded/compiled packages to speed up installation.
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          # The path to cache is pip's cache directory
          path: ~/.cache/pip
          # The key invalidates the cache if Python version or requirements.txt changes
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-
            ${{ runner.os }}-pip-

      # <<< NEW: Cache for Hugging Face models (no changes, just showing for context) >>>
      - name: Cache Hugging Face models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface/hub
          key: ${{ runner.os }}-huggingface-hub-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/horror_generator.py') }}
          restore-keys: |
            ${{ runner.os }}-huggingface-hub-${{ secrets.CACHE_VERSION }}-
            ${{ runner.os }}-huggingface-hub-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y espeak-ng libsndfile1

      # <<< NEW: Install dependencies from requirements.txt >>>
      # This is now simpler and works with the cache.
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create output directory
        run: mkdir -p outputs

      - name: Run horror generator
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python horror_generator.py

      - name: Upload story and audio
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: horror-series-outputs
          path: outputs/

      - name: Clean up
        if: always()
        run: |
          rm -rf outputs